(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{386:function(t,r,a){"use strict";a.r(r);var s=a(42),e=Object(s.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"第2节-bfs和dfs、以及机器学习初步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第2节-bfs和dfs、以及机器学习初步"}},[t._v("#")]),t._v(" 第2节 BFS和DFS、以及机器学习初步")]),t._v(" "),a("p",[t._v("这一节主要学习了：图算法中的"),a("strong",[t._v("深度优先算法")]),t._v("和"),a("strong",[t._v("广度优先算法")]),t._v("，以及线性回归的实现")]),t._v(" "),a("h3",{attrs:{id:"_1-bfs和dfs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-bfs和dfs"}},[t._v("#")]),t._v(" 1. BFS和DFS")]),t._v(" "),a("blockquote",[a("p",[t._v("Breadth-First Search 和 Depth-Frist Search 是图搜索算法中的两种基本算法。都是用来寻找从一个node到另一个node的某条路径的。")])]),t._v(" "),a("p",[t._v("在进行这两个算法之前的第一步，就是先把图通过无循环遍历转换成树的形式：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://chuantu.xyz/t6/702/1572356286x1033347913.png",alt:"GraphToTree"}})]),t._v(" "),a("h4",{attrs:{id:"_1-1-bfs-breadth-first-search"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-bfs-breadth-first-search"}},[t._v("#")]),t._v(" 1.1 BFS(Breadth-First Search)")]),t._v(" "),a("p",[t._v("广度优先算法，通常使用"),a("strong",[t._v("队列")]),t._v("的数据结构实现。从第一层开始，以广度优先的方式，遍历它的下一层所有子节点。")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://chuantu.xyz/t6/702/1572372528x1031866013.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("复杂度")]),t._v("："),a("img",{attrs:{src:"http://latex.codecogs.com/gif.latex?b%5E0+b%5E1+b%5E2+b%5E3+%5Cdots+b%5Ed=%5Cfrac%7B1-b%5E%7Bd+1%7D%7D%7B1-b%7D%5Cstackrel%7Bb,d%5Cto%5Cinfty%7D%7B%5Capprox%7DO(b%5Ed)",alt:""}}),t._v("，其中b为宽度，d为深度")]),t._v(" "),a("p",[a("strong",[t._v("最优路径问题")]),t._v("：当，")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("所有节点之间的 Cost 都非负（例如距离）")])]),t._v(" "),a("li",[a("p",[t._v("每次迭代后，都对数组依照总Cost排序（比如距离、节点个数，对应找最短路径和最少换乘次数）")])])]),t._v(" "),a("p",[t._v("时，BFS一定可以获得最优路径。")]),t._v(" "),a("h4",{attrs:{id:"_1-2-dfs-depth-first-search"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-dfs-depth-first-search"}},[t._v("#")]),t._v(" 1.2 DFS(Depth-First Search)")]),t._v(" "),a("p",[t._v("深度优先算法，通常使用"),a("strong",[t._v("堆")]),t._v("的数据结构实现。从一个节点开始，以深度优先的方式，遍历下面的子节点。")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://chuantu.xyz/t6/702/1572372575x1033347913.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("复杂度")]),t._v("：最坏情况同样是遍历每个节点，同样是"),a("img",{attrs:{src:"http://latex.codecogs.com/gif.latex?O(b%5Ed)",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("最优路径")]),t._v("：很少给出最优路径")]),t._v(" "),a("h4",{attrs:{id:"_1-3-bfs与dfs的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-bfs与dfs的区别"}},[t._v("#")]),t._v(" 1.3 BFS与DFS的区别")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://chuantu.xyz/t6/702/1572355914x1031866013.png",alt:"BfsDfsDifference"}})]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("算法")]),t._v(" "),a("th",[t._v("BFS")]),t._v(" "),a("th",[t._v("DFS")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("实现方式")]),t._v(" "),a("td",[t._v("队列")]),t._v(" "),a("td",[t._v("堆")])]),t._v(" "),a("tr",[a("td",[t._v("时间复杂度")]),t._v(" "),a("td",[a("img",{attrs:{src:"http://latex.codecogs.com/gif.latex?O(b%5Ed)",alt:""}})]),t._v(" "),a("td",[a("img",{attrs:{src:"http://latex.codecogs.com/gif.latex?O(b%5Ed)",alt:""}})])]),t._v(" "),a("tr",[a("td",[t._v("空间复杂度")]),t._v(" "),a("td",[a("img",{attrs:{src:"http://latex.codecogs.com/gif.latex?O(b%5Ed)",alt:""}})]),t._v(" "),a("td",[a("img",{attrs:{src:"http://latex.codecogs.com/gif.latex?O(b*d)",alt:""}})])]),t._v(" "),a("tr",[a("td",[t._v("是否最优路径")]),t._v(" "),a("td",[t._v("在某些条件下")]),t._v(" "),a("td",[t._v("很少给出最优")])])])]),t._v(" "),a("h4",{attrs:{id:"_1-4-a-search"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-a-search"}},[t._v("#")]),t._v(" 1.4 A* Search")]),t._v(" "),a("p",[t._v("（待补充）")]),t._v(" "),a("h3",{attrs:{id:"_2-machine-learning"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-machine-learning"}},[t._v("#")]),t._v(" 2. Machine Learning")]),t._v(" "),a("p",[t._v("（待补充）")]),t._v(" "),a("h3",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("p",[t._v("[1] "),a("a",{attrs:{href:"https://www.jianshu.com/p/bff70b786bb6",target:"_blank",rel:"noopener noreferrer"}},[t._v("基本算法——深度优先搜索（DFS）和广度优先搜索（BFS）"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("[2] "),a("a",{attrs:{href:"https://blog.csdn.net/qq_22642239/article/details/80774013",target:"_blank",rel:"noopener noreferrer"}},[t._v("完美二叉树, 完全二叉树和完满二叉树"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("[3] "),a("a",{attrs:{href:"https://blog.csdn.net/qq_40981899/article/details/85869971",target:"_blank",rel:"noopener noreferrer"}},[t._v("队列、堆思想"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/SimZhou/NLP_Assignments",target:"_blank",rel:"noopener noreferrer"}},[t._v("返回目录"),a("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=e.exports}}]);